# 1.Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление. Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.
def division():
    try:
        number_1 = int(input("Введите первое число: "))
        number_2 = int(input("Введите второе число: "))

        div = float(number_1 / number_2)
        return div

    except ZeroDivisionError:
        print("You cannot divide by zero!")

print(division())

# 2.Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя: имя, фамилия, год рождения, город проживания, email, телефон. Функция должна принимать параметры как именованные аргументы. Реализовать вывод данных о пользователе одной строкой.
# Вариант1
name = input('Введите имя пользователя: ')
surname = input('Введите фамилию пользователя: ')
birth_year = int(input('Введите год рождения пользователя: '))
city = input('Введите город проживания пользователя: ')
email = input('Введите email пользователя: ')
phone = input('Введите телефон пользователя: ')
def data_user(name, surname, birth_year, city, email, phone):
    print(f'Имя пользователя: {name}, Фамилия пользователя: {surname}, Год рождения пользователя: {birth_year}, Город проживания пользователя: {city}, Email пользователя: {email}, Телефон пользователя: {phone}')

data_user(name, surname, birth_year, city, email, phone)

# Вариант 2
def data_user(**kwargs):
    for key, value in kwargs.items():
        print('{} : {}'.format(key,value))
data_user(Имя = "Саша", Фамилия = "Сердюк", Город = "Москва")

# 3.Реализовать функцию my_func(), которая принимает три позиционных аргумента, и возвращает сумму наибольших двух аргументов.
def my_func():
    num_1 = int(input("Введите первое число: "))
    num_2 = int(input("Введите второе число: "))
    num_3 = int(input("Введите третье число: "))
    func_list = [num_1,num_2,num_3]
    new_list = sorted(func_list)
    result = (new_list[1]+new_list[2])
    return result

print(my_func())
# 4.Программа принимает действительное положительное число x и целое отрицательное число y. Необходимо выполнить возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y). При решении задания необходимо обойтись без встроенной функции возведения числа в степень.
# Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **. Второй — более сложная реализация без оператора **, предусматривающая использование цикла.

# Вариант 1
def multi(x,y):
    result = x**y
    return result
print(multi(7, -5))

# Вариант 2
def multi(x,y):
    result = 1
    if y < 0:
        try:
            for i in range(abs(y)):
                result *= 1/x
        except ZeroDivisionError:
            print("Ноль не может быть в отрицательной степени!")
            return None
    elif y == 0:
        result = 1
    else:
        for i in range(y):
            result *=x
    return result
print(multi(7,-5))

# 5.Программа запрашивает у пользователя строку чисел, разделенных пробелом. При нажатии Enter должна выводиться сумма чисел. Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter. Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме. Но если вместо числа вводится специальный символ, выполнение программы завершается. Если специальный символ введен после нескольких чисел, то вначале нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.
def sum_func():
    sum_result = 0
    a = True
    while a == True:
        numbers = input("Введите числа или N для выхода: ").split()

        current_result = 0
        for el in range(len(numbers)):
            if numbers[el] == "N":
                a = False
                break;
            else:
                current_result = current_result + int(numbers[el])
        sum_result = sum_result + current_result
        print(f"Текущая сумма: {sum_result}")
    print(f"Итоговая сумма: {sum_result}")
sum_func()

# 6.Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же, но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
# Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом. Каждое слово состоит из латинских букв в нижнем регистре. Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы. Необходимо использовать написанную ранее функцию int_func().
def int_func():
    inp_string = input("Введите текст: ")
    result = inp_string.title()
    return result
print(int_func())